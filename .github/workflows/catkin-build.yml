name: Build

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  build:
    # strategy:
    #   matrix:
    #     container: ["ros:melodic-ros-base", "ros:noetic-ros-base"]
    container: ros:noetic-ros-base
    runs-on: ubuntu-20.04
    # container: ${{ matrix.container }}

    steps:
      - uses: actions/checkout@v1
      - name: Install catkin & package dependencies
        run: |
          cd / && ./ros_entrypoint.sh
          apt-get update
          apt-get install -y python3-catkin-lint python3-pip
          pip3 install osrf-pycommon
          apt-get install -y ros-noetic-catkin python3-catkin-tools

      - name: Setup catkin workspace
        run: |
          mkdir -p ~/catkin_ws/src
          cd ~/catkin_ws
          /bin/bash -c "source /opt/ros/noetic/setup.bash && catkin build"
          apt-get update
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y

      - name: catkin build
        shell: bash
        run: |
          apt-get install libjsoncpp-dev 
          ln -s /usr/include/jsoncpp/json/ /usr/include/json
          source /opt/ros/$ROS_DISTRO/setup.bash
          echo "sourced setup"
          cd .. 
          mv ros-example src
          catkin build -DCMAKE_BUILD_TYPE=$BUILD_TYPE
          echo "first build ok"
          # catkin build --verbose --catkin-make-args run_tests
          # echo "second build ok"
          # catkin_test_results
